{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blog-post.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registration.service.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/userprofile/userprofile.component.css","webpack:///./src/app/userprofile/userprofile.component.html","webpack:///./src/app/userprofile/userprofile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders} from  '@angular/common/http';\nimport {UserService} from './user.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\tpublic API_URL  =  '/api/';\n\n  constructor(private  http:HttpClient, private _userService:UserService) { \n  }\n   // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token\n      })\n    };\n  }\n\n  post_list() {\n    return this.http.get(this.API_URL+'posts');\n  }\n\n  // send a POST request to the API to create a new data object\n  post_create(post) {\n    return this.http.post(this.API_URL+'posts', JSON.stringify(post), this.getHttpOptions());\n  }\n\n  user_list() {\n    return this.http.get(this.API_URL+'users');\n  }\n  // send a POST request to the API to create a new data object\n  user_create(user) {\n    return this.http.post(this.API_URL+'user-creation', JSON.stringify(user), this.getHttpOptions());\n  }\n\n \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\nimport {LoginComponent} from  './login/login.component';\nimport {RegistrationComponent} from  './registration/registration.component';\nimport {UserprofileComponent} from  './userprofile/userprofile.component';\n\n\n\n\nconst routes: Routes = [\n{ path:  '', redirectTo:  'login', pathMatch:  'full' },\n{\n    path:  'login',\n    component:  LoginComponent\n},\n{\n    path:  'register',\n    component:  RegistrationComponent\n},\n{\n    path:  'profile',\n    component:  UserprofileComponent\n},\n\n\n\n];\n@NgModule({\n  imports: [\n    CommonModule,RouterModule.forRoot(routes)\n  ],\n  declarations: [],\n    exports: [RouterModule]\n\n})\nexport class AppRoutingModule {\n }\n","module.exports = \"\"","module.exports = \"<nav>\\n  <a routerLink=\\\"\\\">Login</a>\\n    <a routerLink=\\\"/register\\\">Register</a>\\n      <a routerLink=\\\"/profile\\\">Profile</a>\\n</nav>\\n<div>\\n<router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\"","\nimport {Component, OnInit} from '@angular/core';\n// Angular 6/RxJS 6\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * An object representing the user for the login form\n   */\n\n  constructor() { }\n \n\n  ngOnInit() {\n      \n  }\n  \n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './user.service';\nimport { BlogPostService } from './blog-post.service';\nimport { RegistrationService } from './registration.service';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from  './app-routing.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { UserprofileComponent } from './userprofile/userprofile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    UserprofileComponent\n  ],\n imports: [BrowserModule, FormsModule, HttpClientModule, AppRoutingModule],\n  providers: [UserService,BlogPostService,RegistrationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserService} from './user.service';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BlogPostService {\n\n  constructor(private http: HttpClient, private _userService: UserService) {\n  }\n\n  // Uses http.get() to load data from a single API endpoint\n  list() {\n    return this.http.get('/api/posts');\n  }\n\n  // send a POST request to the API to create a new data object\n  create(post, token) {\n    return this.http.post('/api/posts', JSON.stringify(post), this.getHttpOptions());\n  }\n\n  // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token\n      })\n    };\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Log In</h2>\\n<div class=\\\"row\\\" *ngIf=\\\"!_userService.token\\\">\\n  <div class=\\\"col-sm-4\\\">\\n    <label>Email:</label><br />\\n    <input type=\\\"email\\\" name=\\\"login-email\\\" [(ngModel)]=\\\"user.email\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.email\\\"><br />\\n    {{ error }}</span></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <label>Password:</label><br />\\n    <input type=\\\"password\\\" name=\\\"login-password\\\" [(ngModel)]=\\\"user.password\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.password\\\"><br />\\n    {{ error }}</span>\\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n    <button (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\">Log In</button>\\n<div class=\\\"g-signin2\\\" data-onsuccess=\\\"onSignIn\\\"></div>\\n<a href=\\\"#\\\" onclick=\\\"signOut();\\\">Sign out</a>\\n\\n\\n\\n\\n\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.non_field_errors\\\">{{ error }}<br /></span>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"_userService.token\\\">\\n  <div class=\\\"col-sm-12\\\">You are logged in as {{ _userService.email }}.<br />\\n    Token Expires: {{ _userService.token_expires }}<br />\\n    <button (click)=\\\"refreshToken()\\\" class=\\\"btn btn-primary\\\">Refresh Token</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-primary\\\">Log Out</button>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../user.service';\nimport {throwError} from 'rxjs';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\npublic user: any;\npublic new_user: any;\npublic myvariable=\"hello\";\n\n\n  constructor(private _userService: UserService) {\n   }\n\n  ngOnInit() {\n    this.new_user = {};\n    this.user = {\n      email: '',\n      password: ''\n    };\n  }\n  login() {\n    this._userService.login({'email': this.user.email, 'password': this.user.password});\n  }\n\n  refreshToken() {\n    this._userService.refreshToken();\n  }\n\n  logout() {\n    this._userService.logout();\n  }\n\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserService} from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RegistrationService {\n\n  constructor(private http: HttpClient, private _userService: UserService) {\n  }\n    list() {\n    return this.http.get('/api/users');\n  }\n  // send a POST request to the API to create a new data object\n  create(user, token) {\n    return this.http.post('api/user-creation', JSON.stringify(user), this.getHttpOptions());\n  }\n\n  // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token\n      })\n    };\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <label class=\\\"col-md-3\\\">Enter new email:</label>\\n  <div class=\\\"col-md-9 mb-1\\\"><input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"new_user.email\\\"></div>\\n   <label class=\\\"col-md-3\\\">Enter new password:</label><input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"new_user.password\\\"></div>\\n  <div class=\\\"col-md-2 offset-3\\\">\\n    <button (click)=\\\"createUser()\\\" class=\\\"btn btn-primary\\\">Save</button>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../api.service';\nimport {throwError} from 'rxjs';  // Angular 6/RxJS 6\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\tpublic new_user: any;\n  public users;\n\n\n  constructor(private _apiService: ApiService) { }\n\n  ngOnInit() {\n  \tthis.new_user = {};\n\n\n  }\n  getUsers() {\n    this._apiService.user_list().subscribe(\n      // the first argument is a function which runs on success\n      data => {\n        this.users = data;\n        // convert the dates to a nice format\n      },\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => console.log('done loading users')\n    );\n  }\n      createUser() {\n    this._apiService.user_create(this.new_user).subscribe(\n       data => {\n         this.getUsers();\n         return true;\n\n       },\n       error => {\n         console.error('Error saving!');\n         return throwError(error);\n       }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  // http options used for making API calls\n  private httpOptions: any;\n\n  // the actual JWT token\n  public token: string;\n\n  // the token expiration date\n  public token_expires: Date;\n\n  // the username of the logged in user\n  public email: string;\n\n  // error messages received from the login attempt\n  public errors: any = [];\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n  }\n\n  // Uses http.post() to get an auth token from djangorestframework-jwt endpoint\n  public login(user) {\n  console.log(JSON.stringify(user));\n    this.http.post('/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n        console.log(this.errors);\n      }\n    );\n  }\n\n  // Refreshes the JWT token, to extend the time the user is logged in\n  public refreshToken() {\n    this.http.post('api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.email = null;\n  }\n\n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n\n    // decode the token to read the username and expiration timestamp\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.email = token_decoded.username;\n    console.log(\"hello\");\n    console.log(token_decoded);\n    console.log(this.errors);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"mt-3\\\">Micro Blog Posts</h2>\\n<div *ngFor=\\\"let post of posts\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <label class=\\\"col-md-2\\\">By:</label>\\n    <div class=\\\"col-md-2 mb-1\\\">{{ post.user }}</div>\\n    <label class=\\\"col-md-2\\\">Date:</label>\\n    <div class=\\\"col-md-6\\\">{{ post.date }}</div>\\n    <div class=\\\"col-md-12\\\">{{ post.body }}</div>\\n  </div>\\n</div>\\n\\n<h3>Create a new post:</h3>\\n\\n<div class=\\\"row mb-1\\\">\\n  <label class=\\\"col-md-3\\\">Enter your post:</label>\\n  <div class=\\\"col-md-9 mb-1\\\"><input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"new_post.body\\\"></div>\\n  <div class=\\\"col-md-2 offset-3\\\">\\n    <button (click)=\\\"createPost()\\\" class=\\\"btn btn-primary\\\">Save</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../api.service';\nimport {throwError} from 'rxjs';\n\n@Component({\n  selector: 'app-userprofile',\n  templateUrl: './userprofile.component.html',\n  styleUrls: ['./userprofile.component.css']\n})\nexport class UserprofileComponent implements OnInit {\n\npublic posts;\n  public new_post:any;\n\n\n\n  constructor( private _apiService: ApiService) { }\n \n\n  ngOnInit() {\n    this.getPosts();\n    this.new_post = {};\n\n  }\n  \n\n\n\n\n  getPosts() {\n    this._apiService.post_list().subscribe(\n      // the first argument is a function which runs on success\n      data => {\n        this.posts = data;\n        // convert the dates to a nice format\n        for (let post of this.posts) {\n          post.date = new Date(post.date);\n        }\n      },\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => console.log('done loading posts')\n    );\n  }\n\n  createPost() {\n    this._apiService.post_create(this.new_post).subscribe(\n       data => {\n         // refresh the list\n         this.getPosts();\n         return true;\n       },\n       error => {\n         console.error('Error saving!');\n         return throwError(error);\n       }\n    );\n\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}